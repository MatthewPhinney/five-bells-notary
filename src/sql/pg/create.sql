--
-- PostgreSQL
--
SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = "warning";
SET search_path = "public", "pg_catalog";
--
-- Sequences
--

CREATE SEQUENCE "N_CASES_ID_SEQ"
  INCREMENT 1 
  START 1
  CACHE 100;

CREATE SEQUENCE "N_NOTIFICATION_ID_SEQ"
  INCREMENT 1 
  START 1
  CACHE 100;

--
-- Tables
--
CREATE TABLE "N_LU_CASE_STATUS"
(
    "CASE_STATUS_ID"    INTEGER NOT NULL ,
    "NAME"              CHARACTER VARYING(20) NOT NULL ,
    "DESCRIPTION"       CHARACTER VARYING(255) NULL ,
    "DB_CREATED_DTTM"   TIMESTAMP WITH TIME ZONE DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_DTTM"   TIMESTAMP WITH TIME ZONE DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_USER"   CHARACTER VARYING(40) DEFAULT  CURRENT_USER  NOT NULL 
);

CREATE INDEX "N_XPK_LU_CASE_STATUS" ON "N_LU_CASE_STATUS"
("CASE_STATUS_ID"   ASC);

ALTER TABLE "N_LU_CASE_STATUS" ADD CONSTRAINT "N_PK_LU_CASE_STATE" PRIMARY KEY ("CASE_STATUS_ID");

CREATE UNIQUE INDEX "N_XAK_LU_CASE_STATE" ON "N_LU_CASE_STATUS"
("NAME"   ASC);

CREATE TABLE "N_CASES"
(
    "CASE_ID"                    INTEGER NOT NULL DEFAULT nextval('"N_CASES_ID_SEQ"'::regclass) ,
    "UUID"                       CHARACTER VARYING(64) NOT NULL ,
    "STATUS_ID"                  INTEGER NOT NULL REFERENCES "N_LU_CASE_STATUS"("CASE_STATUS_ID") ,
    "EXECUTION_CONDITION_TYPE"   CHARACTER VARYING(20) NULL ,
    "EXECUTION_CONDITION_DIGEST" CHARACTER VARYING(4000) NULL ,
    "EXEC_COND_FULFILLMENT"      CHARACTER VARYING(4000) NULL ,
    "EXPIRES_DTTM"               TIMESTAMP WITH TIME ZONE NULL ,
    "NOTARIES"                   CHARACTER VARYING(4000) NULL ,
    "NOTIFICATION_TARGETS"       CHARACTER VARYING(4000) NULL ,
    "DB_CREATED_DTTM"            TIMESTAMP WITH TIME ZONE DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_DTTM"            TIMESTAMP WITH TIME ZONE DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_USER"            CHARACTER VARYING(40) DEFAULT  CURRENT_USER  NOT NULL 
);

CREATE INDEX "N_XPK_CASES" ON "N_CASES"
("CASE_ID"   DESC);

ALTER TABLE ONLY "N_CASES"
    ADD CONSTRAINT "N_PK_CASES" PRIMARY KEY ("CASE_ID");

CREATE UNIQUE INDEX "N_XAK_CASES_GUID" ON "N_CASES"
("UUID"   ASC);

CREATE INDEX "N_XIF_CASES" ON "N_CASES"
("STATUS_ID"   ASC);

CREATE TABLE "N_LU_NOTIFICATION_STATUS"
(
    "NOTIFICATION_STATUS_ID"     INTEGER NOT NULL ,
    "NAME"                       CHARACTER VARYING(20) NOT NULL ,
    "DESCRIPTION"                CHARACTER VARYING(255) NULL ,
    "DB_CREATED_DTTM"            TIMESTAMP WITH TIME ZONE  DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_DTTM"            TIMESTAMP WITH TIME ZONE  DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_USER"            CHARACTER VARYING(40) DEFAULT  USER  NOT NULL 
);

CREATE UNIQUE INDEX "N_XPK_LU_NOTIFICATION_STATUS" ON "N_LU_NOTIFICATION_STATUS"
("NOTIFICATION_STATUS_ID"   ASC);

ALTER TABLE "N_LU_NOTIFICATION_STATUS"
    ADD CONSTRAINT  "N_PK_LU_NOTIFICATION_STATE" PRIMARY KEY ("NOTIFICATION_STATUS_ID");

CREATE UNIQUE INDEX "N_XAK_LU_NOTIFICATION_STATUS" ON "N_LU_NOTIFICATION_STATUS"
("NAME"   ASC);

CREATE TABLE "N_NOTIFICATIONS"
(
    "NOTIFICATION_ID"            INTEGER NOT NULL DEFAULT nextval('"N_NOTIFICATION_ID_SEQ"'::regclass) ,
    "STATUS_ID"                  INTEGER NOT NULL REFERENCES "N_LU_NOTIFICATION_STATUS"("NOTIFICATION_STATUS_ID"),
    "CASE_ID"                    INTEGER NOT NULL REFERENCES "N_CASES"("CASE_ID") ,
    "TARGET"                     CHARACTER VARYING(4000) NULL ,
    "RETRY_COUNT"                INTEGER NULL ,
    "NEXT_RETRY_DTTM"            TIMESTAMP WITH TIME ZONE NULL ,
    "IS_ACTIVE"                  SMALLINT NULL ,
    "LAST_RETRY_DTTM"            TIMESTAMP WITH TIME ZONE NULL ,
    "DB_CREATED_DTTM"            TIMESTAMP WITH TIME ZONE  DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_DTTM"            TIMESTAMP WITH TIME ZONE  DEFAULT  NOW()  NOT NULL ,
    "DB_UPDATED_USER"            CHARACTER VARYING(40) DEFAULT  USER  NOT NULL 
);

CREATE INDEX "N_XPK_NOTIFICATIONS" ON "N_NOTIFICATIONS"
("NOTIFICATION_ID"   DESC);

CREATE INDEX "N_XIF_NOTIFICATIONS_CASES" ON "N_NOTIFICATIONS"
("CASE_ID"   ASC);

CREATE INDEX "N_XIF_NOTIFICATIONS_STATUS" ON "N_NOTIFICATIONS"
("STATUS_ID"   ASC);

--
--  Triggers and Functions
--
CREATE OR REPLACE FUNCTION SYNC_DB_CREATED_DTTM() RETURNS TRIGGER AS $$ BEGIN IF row(NEW.*) IS DISTINCT FROM row(OLD.*) THEN NEW."DB_CREATED_DTTM" = now(); RETURN NEW; ELSE RETURN OLD; END IF; END; $$ language 'plpgsql';

CREATE TRIGGER "N_LU_CASE_STATUS_DTTM" BEFORE UPDATE ON "N_LU_CASE_STATUS"   
  FOR EACH ROW EXECUTE PROCEDURE   SYNC_DB_CREATED_DTTM();

CREATE TRIGGER "N_NOTIFICATIONS_DTTM" BEFORE UPDATE ON "N_NOTIFICATIONS"   
  FOR EACH ROW EXECUTE PROCEDURE   SYNC_DB_CREATED_DTTM();

CREATE TRIGGER "N_CASES_DTTM" BEFORE UPDATE ON "N_CASES"   
  FOR EACH ROW EXECUTE PROCEDURE   SYNC_DB_CREATED_DTTM();

CREATE TRIGGER "N_LU_NOTIFICATION_STATUS_DTTM" BEFORE UPDATE ON "N_LU_NOTIFICATION_STATUS"   
  FOR EACH ROW EXECUTE PROCEDURE   SYNC_DB_CREATED_DTTM();

--
-- Initial Lookup values
--

INSERT INTO "N_LU_CASE_STATUS" ("CASE_STATUS_ID", "NAME", "DESCRIPTION") VALUES (1, 'proposed', 'This case is proposed');
INSERT INTO "N_LU_CASE_STATUS" ("CASE_STATUS_ID", "NAME", "DESCRIPTION") VALUES (2, 'rejected', 'This case has been rejected because it is past expiry');
INSERT INTO "N_LU_CASE_STATUS" ("CASE_STATUS_ID", "NAME", "DESCRIPTION") VALUES (3, 'executed', 'This case has been executed because it received the proper fulfillment');

INSERT INTO "N_LU_NOTIFICATION_STATUS" ("NOTIFICATION_STATUS_ID", "NAME", "DESCRIPTION") VALUES  (1, 'pending', 'This notification is being delivered');
INSERT INTO "N_LU_NOTIFICATION_STATUS" ("NOTIFICATION_STATUS_ID", "NAME", "DESCRIPTION") VALUES  (2, 'delivered', 'This notification has been delivered');
INSERT INTO "N_LU_NOTIFICATION_STATUS" ("NOTIFICATION_STATUS_ID", "NAME", "DESCRIPTION") VALUES  (3, 'failed', 'Delivery failed permanently');
--
-- End of Script
--
